@page
@model LibraryWebApp.Pages.Books.IndexModel

@{
    ViewData["Title"] = "Index";
}

<h1>Library</h1>

<p>
    <a asp-page="Create">Add Book</a>
</p>
<form asp-page-handler="Search">
    <div class="d-flex">
        <div class="input-group">
            <input class="form-control" placeholder="Search for specific Book" asp-for="SearchTerm" />
            <br />
            <div class="input-group-append">
                <button type="submit" class="btn btn-primary">Search</button>
            </div>
        </div>
    </div>
</form>
<div class="btn-group">
    <button class="btn btn-secondary btn-sm dropdown-toggle" type="button" data-toggle="dropdown" aria-expanded="true">
        Sort By
    </button>
    <div class="dropdown-menu">
        <form asp-page-handler="ByCategory" method="post">
            <button class="btn btn-link" type="submit">
                Category
            </button>
        </form>
        <form asp-page-handler="ByAuthor" method="post">
            <button class="btn btn-link" type="submit">
                Author
            </button>
        </form>
        <form asp-page-handler="ByAttribute" method="post">
            <button class="btn btn-link" type="submit">
                Availability
            </button>
        </form>
        <form asp-page-handler="ByTitle" method="post">
            <button class="btn btn-link" type="submit">
                Title
            </button>
        </form>
    </div>
</div>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Book[0].Title)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Book[0].Description)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Book[0].Attribute)
            </th>
            <th>
                Available
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Book[0].Author)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Book[0].Category)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Book)
        {
            <tr>
                <td>
                    <h5>@Html.DisplayFor(modelItem => item.Title)</h5> 
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Description)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Attribute.Color)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Attribute.Available)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Author.AuthorName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Category.Genre)
                </td>
                <td>
                    <a asp-page="./Edit" asp-route-id="@item.Id">Edit</a> |
                    <a asp-page="./Details" asp-route-id="@item.Id">Details</a> |
                    <a asp-page="./Delete" asp-route-id="@item.Id">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>
